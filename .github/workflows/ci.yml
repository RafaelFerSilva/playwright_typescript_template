name: CI (init_db.py)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        options: >-
          --health-cmd="mysqladmin ping --host=localhost --user=root --password=rootpassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - uses: actions/checkout@v4

      # 1. Python para rodar init_db.py
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-dotenv mysql-connector-python

      # 2. Node.js para seus testes
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - run: npm ci

      # 3. Popular o banco usando script Python
      - name: Initialize database
        run: python init_db.py
        env:
          DB_HOST: 127.0.0.1
          DB_USER: testuser
          DB_PASSWORD: testpassword
          DB_NAME: testdb
          DB_PORT: 3306

      # 4. Checks de qualidade + testes
      - run: npm run quality

      - run: npm run test:ci

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
