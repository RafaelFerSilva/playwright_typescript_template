name: CI (init_db.py)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        options: >-
          --health-cmd="mysqladmin ping --host=localhost --user=root --password=rootpassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=15

    env:
      # Playwright defaults
      BASE_URL: https://test-automation-practice.com.br/
      HEADLESS: "false"
      CI: "false"
      TRACE: off
      SCREENSHOT: only-on-failure
      VIDEO: off
      ACTION_TIMEOUT: 15000
      NAVIGATION_TIMEOUT: 30000
      TEST_TIMEOUT: 60000
      RETRIES: 0
      REPORTER: allure-playwright:outputFolder=allure-results

      # Browser matrix defaults
      TEST_CHROMIUM: "true"
      TEST_FIREFOX: "false"
      TEST_WEBKIT: "false"
      TEST_MOBILE: "false"

      # Database vars
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: testdb
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpassword

      DB_NAME: testdb
      DB_USER: testuser
      DB_PASSWORD: testpassword
      DB_HOST: localhost
      DB_PORT: 3306

    steps:
      - uses: actions/checkout@v4

      # 1. Python para rodar init_db.py
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-dotenv mysql-connector-python

      # 2. Node.js para seus testes
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - run: npm ci

      # 3. Popular o banco usando script Python
      - name: Initialize database
        run: python init_db.py

      # 4. Checks de qualidade (lint + prettier + type-check)
      - name: Run quality checks
        run: npm run quality

      # 5. Rodar testes Playwright
      - name: Run Playwright tests
        run: npm run test:ci

      # 6. Upload do report sempre (mesmo se falhar)
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
