name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        options: >-
          --health-cmd="mysqladmin ping --protocol=tcp --user=root --password=rootpassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=15
        volumes:
          - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro

    steps:
      # Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup do Node.js (para Playwright + TS + lint)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      # Espera extra, garantindo tempo para que MySQL + init.sql finalizem
      - name: Wait extra for MySQL init
        run: sleep 20

      # Instalar dependências do projeto
      - name: Install dependencies
        run: npm ci

      # Rodar lint + prettier + type-check
      - name: Run quality checks
        run: npm run quality

      # Rodar testes com Playwright em modo headless (CI)
      - name: Run Playwright tests
        run: npm run test:ci

      # Upload do relatório do Playwright mesmo se falhar
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
